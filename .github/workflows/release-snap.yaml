# Build and release the snap on merge to main
#
# test-build-snap.yaml duplicates some of this workflow's logic.  If modifying this workflow, ensure
# that test-build-snap.yaml is also updated
name: Release Snap

on:
  push:
    branches:
      - main
  workflow_dispatch: {}

env:
  SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.SNAPCRAFT_STORE_CREDENTIALS }}
  LAUNCHPAD_TOKEN: ${{ secrets.LAUNCHPAD_TOKEN }}

jobs:
  build:
    name: Build snap (${{ matrix.confinement }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        confinement: [ "strict"]
        include:
          - confinement: "strict"
            channel: "latest/edge"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          # snapcraft remote-build requires a full clone
          fetch-depth: 0

      - name: Setup LXD
        uses: canonical/setup-lxd@v0.1.1
        with:
          channel: latest/stable

      - name: Install dependencies
        run: |
          sudo snap install --classic --channel edge snapcraft
          # Setup Launchpad credentials
          mkdir -p ~/.local/share/snapcraft
          echo -e "$LAUNCHPAD_TOKEN" >> ~/.local/share/snapcraft/launchpad-credentials
          mkdir -p ~/.local/share/snapcraft/provider/launchpad
          echo -e "$LAUNCHPAD_TOKEN" >> ~/.local/share/snapcraft/provider/launchpad/credentials
          git config --global user.email "github-actions@github.com"
          git config --global user.name "Github Actions"

      - name: yq - portable yaml processor
        uses: mikefarah/yq@v4

      - name: Build Snap (remote)
        run: snapcraft remote-build --launchpad-accept-public-upload

      - name: Upload and Publish amd64 Snap
        run: snapcraft upload --release ${{ matrix.channel }} node-exporter_*_amd64.snap

      - name: Upload and Publish arm64 Snap
        run: snapcraft upload --release ${{ matrix.channel }} node-exporter_*_arm64.snap
